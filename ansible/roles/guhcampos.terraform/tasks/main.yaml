---
- debug: var=ansible_system
- debug: var=ansible_machine

- name: ensure download directory exist
  ansible.builtin.file:
    path: "{{guhcampos_tf_download_dir}}"
    owner: "{{ansible_user_id}}"
    state: directory

- name: ensure install directories exist
  ansible.builtin.file:
    path: "{{guhcampos_tf_install_dir}}/terraform-{{item.version}}"
    owner: "{{ansible_user_id}}"
    state: directory
  when: ansible_system | lower == item.system and ansible_machine == item.arch
  loop: "{{guhcampos_tf_versions}}"

- name: donwload the requested versions of terraform
  ansible.builtin.get_url:
    url: "{{guhcampos_tf_download_url}}"
    dest: "{{guhcampos_tf_download_dir}}"
    checksum: "{{item.checksum}}"
  when: ansible_system | lower == item.system and ansible_machine == item.arch
  register: download
  loop: "{{guhcampos_tf_versions}}"

- debug: var=item.dest

- name: install all requested versions of terraform
  ansible.builtin.unarchive:
    src: "{{item.dest}}"
    dest: "{{guhcampos_tf_install_dir}}/terraform-{{item.item.version}}"
    remote_src: true
  loop: "{{download.results}}"
  when: item.dest is defined

- name: create the symlink for the default version of terraform
  ansible.builtin.file:
    path: "{{guhcampos_tf_install_dir}}/terraform"
    src: "{{guhcampos_tf_install_dir}}/terraform-{{guhcampos_tf_default_version}}/terraform"
    state: link
